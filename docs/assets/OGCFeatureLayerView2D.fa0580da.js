import{D as e,E as i,F as r,z as s,dw as t}from"./vendor.d5722712.js";import a from"./FeatureLayerView2D.bcb35150.js";import"./definitions.6737c10c.js";import"./LayerView2D.707e4a8e.js";import"./Container.88a25d8e.js";import"./mat4f32.a5cabe00.js";import"./_commonjsHelpers.f2a458db.js";import"./clickToleranceUtils.1b8c692d.js";import"./drapedUtils.1be3519f.js";import"./schemaUtils.4fd6ed1f.js";import"./MD5.1ef35834.js";import"./Utils.7d3ca496.js";import"./FramebufferObject.3fdde870.js";import"./MaterialKey.0738772f.js";import"./visualVariablesUtils.d402ff0b.js";import"./Rect.b51904ac.js";import"./BidiEngine.9b392b22.js";import"./popupUtils.475e9813.js";const l=a=>{let l=class extends a{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return t(this.layer.fields,["*"])}};return e([i()],l.prototype,"layer",void 0),e([i({readOnly:!0})],l.prototype,"availableFields",null),l=e([r("esri.views.layers.OGCFeatureLayerView")],l),l};let o=class extends(l(a)){};o=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],o);var p=o;export default p;
