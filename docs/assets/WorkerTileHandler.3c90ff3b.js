import{bO as e,bw as t,x as r,D as i,r as s,B as n}from"./vendor.abf366c9.js";import{f as a,t as l,n as o,b as c,r as h,h as x,c as u,d,e as f,P as y,g as _,a as g}from"./StyleRepository.40dc46d6.js";import{o as p,a as m,s as V}from"./earcut.0e5467f0.js";import{t as I,i as B,e as b,u as w,b as M,a as P,n as v,f as k}from"./TurboLine.110e44de.js";import{t as L}from"./Rect.b51904ac.js";import{C as A}from"./BidiEngine.9b392b22.js";import"./vec4f32.6de15d07.js";import"./colorUtils.b1561659.js";import"./definitions.6737c10c.js";import"./GeometryUtils.9c8423f5.js";import"./_commonjsHelpers.f2a458db.js";var N,D;function T(e){return 746===e||747===e||!(e<4352)&&(e>=12704&&e<=12735||e>=12544&&e<=12591||e>=65072&&e<=65103&&!(e>=65097&&e<=65103)||e>=63744&&e<=64255||e>=13056&&e<=13311||e>=11904&&e<=12031||e>=12736&&e<=12783||e>=12288&&e<=12351&&!(e>=12296&&e<=12305||e>=12308&&e<=12319||12336===e)||e>=13312&&e<=19903||e>=19968&&e<=40959||e>=12800&&e<=13055||e>=12592&&e<=12687||e>=43360&&e<=43391||e>=55216&&e<=55295||e>=4352&&e<=4607||e>=44032&&e<=55215||e>=12352&&e<=12447||e>=12272&&e<=12287||e>=12688&&e<=12703||e>=12032&&e<=12255||e>=12784&&e<=12799||e>=12448&&e<=12543&&12540!==e||e>=65280&&e<=65519&&!(65288===e||65289===e||65293===e||e>=65306&&e<=65310||65339===e||65341===e||65343===e||e>=65371&&e<=65503||65507===e||e>=65512&&e<=65519)||e>=65104&&e<=65135&&!(e>=65112&&e<=65118||e>=65123&&e<=65126)||e>=5120&&e<=5759||e>=6320&&e<=6399||e>=65040&&e<=65055||e>=19904&&e<=19967||e>=40960&&e<=42127||e>=42128&&e<=42191)}function C(e){switch(e){case 10:case 32:case 38:case 40:case 41:case 43:case 45:case 47:case 173:case 183:case 8203:case 8208:case 8211:case 8231:return!0}return!1}function S(e){switch(e){case 9:case 10:case 11:case 12:case 13:case 32:return!0}return!1}(D=N||(N={}))[D.INITIALIZED=0]="INITIALIZED",D[D.NO_DATA=1]="NO_DATA",D[D.READY=2]="READY",D[D.MODIFIED=3]="MODIFIED",D[D.INVALID=4]="INVALID";const E=24;class z{constructor(e,t,r,i,s,n,a){this._glyphItems=e,this._maxWidth=t,this._lineHeight=r,this._letterSpacing=i,this._hAnchor=s,this._vAnchor=n,this._justify=a}getShaping(e,t,r){const i=this._letterSpacing,s=this._lineHeight,n=this._justify,a=this._maxWidth,l=[];let o=0,c=0;const h=e.length;for(let m=0;m<h;m++){const t=e.charCodeAt(m),s=r&&T(t);let n;for(const e of this._glyphItems)if(n=e[t],n)break;l.push({codePoint:t,x:o,y:c,vertical:s,glyphMosaicItem:n}),n&&(o+=n.metrics.advance+i)}let x=o;a>0&&(x=o/Math.max(1,Math.ceil(o/a)));const u=e.indexOf("â€‹")>=0,d=[];for(let m=0;m<h-1;m++){const e=l[m].codePoint,t=!((f=e)<11904)&&(f>=12704&&f<=12735||f>=12544&&f<=12591||f>=65072&&f<=65103||f>=63744&&f<=64255||f>=13056&&f<=13311||f>=11904&&f<=12031||f>=12736&&f<=12783||f>=12288&&f<=12351||f>=13312&&f<=19903||f>=19968&&f<=40959||f>=12800&&f<=13055||f>=65280&&f<=65519||f>=12352&&f<=12447||f>=12272&&f<=12287||f>=12032&&f<=12255||f>=12784&&f<=12799||f>=12448&&f<=12543||f>=65040&&f<=65055||f>=42128&&f<=42191||f>=40960&&f<=42127);if(C(e)||t){let r=0;if(10===e)r-=1e4;else if(t&&u)r+=150;else{40!==e&&65288!==e||(r+=50);const t=l[m+1].codePoint;41!==t&&65289!==t||(r+=50)}d.push(this._buildBreak(m+1,l[m].x,x,d,r,!1))}}var f;const y=this._optimalBreaks(this._buildBreak(h,o,x,d,0,!0));let _=0;const g=t?-s:s;let p=0;for(let m=0;m<y.length;m++){const e=y[m];let t=p;for(;t<e&&S(l[t].codePoint);)l[t].glyphMosaicItem=null,++t;let r=e-1;for(;r>t&&S(l[r].codePoint);)l[r].glyphMosaicItem=null,--r;if(t<=r){const e=l[t].x;for(let s=t;s<=r;s++)l[s].x-=e,l[s].y=c;let i=l[r].x;l[r].glyphMosaicItem&&(i+=l[r].glyphMosaicItem.metrics.advance),_=Math.max(i,_),n&&this._applyJustification(l,t,r)}p=e,c+=g}if(l.length>0){const e=y.length-1,r=(n-this._hAnchor)*_;let i=(-this._vAnchor*(e+1)+.5)*s;t&&e&&(i+=e*s);for(const t of l)t.x+=r,t.y+=i}return l.filter((e=>e.glyphMosaicItem))}static getTextBox(e,t){if(!e.length)return null;let r=1/0,i=1/0,s=0,n=0;for(const a of e){const e=a.glyphMosaicItem.metrics.advance,l=a.x,o=a.y-17,c=l+e,h=o+t;r=Math.min(r,l),s=Math.max(s,c),i=Math.min(i,o),n=Math.max(n,h)}return{x:r,y:i,width:s-r,height:n-i}}static getBox(e){if(!e.length)return null;let t=1/0,r=1/0,i=0,s=0;for(const n of e){const{height:e,left:a,top:l,width:o}=n.glyphMosaicItem.metrics,c=n.x,h=n.y-(e-Math.abs(l)),x=c+o+a,u=h+e;t=Math.min(t,c),i=Math.max(i,x),r=Math.min(r,h),s=Math.max(s,u)}return{x:t,y:r,width:i-t,height:s-r}}static addDecoration(e,t){const r=e.length;if(0===r)return;let i=e[0].x+e[0].glyphMosaicItem.metrics.left,s=e[0].y;for(let a=1;a<r;a++){const r=e[a];if(r.y!==s){const n=e[a-1].x+e[a-1].glyphMosaicItem.metrics.left+e[a-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:s+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new L(4,0,4,8),metrics:{width:n-i,height:8,left:0,top:0,advance:0},page:0,code:0}}),s=r.y,i=r.x+r.glyphMosaicItem.metrics.left}}const n=e[r-1].x+e[r-1].glyphMosaicItem.metrics.left+e[r-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:s+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new L(4,0,4,8),metrics:{width:n-i,height:8,left:0,top:0,advance:0},page:0,code:0}})}_breakScore(e,t,r,i){const s=(e-t)*(e-t);return i?e<t?s/2:2*s:s+Math.abs(r)*r}_buildBreak(e,t,r,i,s,n){let a=null,l=this._breakScore(t,r,s,n);for(const o of i){const e=t-o.x,i=this._breakScore(e,r,s,n)+o.score;i<=l&&(a=o,l=i)}return{index:e,x:t,score:l,previousBreak:a}}_optimalBreaks(e){return e?this._optimalBreaks(e.previousBreak).concat(e.index):[]}_applyJustification(e,t,r){const i=e[r],s=i.vertical?E:i.glyphMosaicItem?i.glyphMosaicItem.metrics.advance:0,n=(i.x+s)*this._justify;for(let a=t;a<=r;a++)e[a].x-=n}}class F{constructor(e,t,r=0,i=-1,s=.5){this.x=e,this.y=t,this.angle=r,this.segment=i,this.minzoom=s}}class U{constructor(e,t,r,i,s,n=.5,a=o){this.anchor=e,this.labelAngle=t,this.glyphAngle=r,this.page=i,this.alternateVerticalGlyph=s,this.minzoom=n,this.maxzoom=a}}class O{constructor(e,t,r,i,s,n,a,l,o,c,h,x){this.tl=e,this.tr=t,this.bl=r,this.br=i,this.mosaicRect=s,this.labelAngle=n,this.minAngle=a,this.maxAngle=l,this.anchor=o,this.minzoom=c,this.maxzoom=h,this.page=x}}class R{constructor(e){this.shapes=e}}class G{getIconPlacement(e,t,r){const i=new I(e.x,e.y),s=0===r.rotationAlignment,n=r.keepUpright;let o=r.rotate*a;s&&(o+=e.angle);const c=new R([]);return r.allowOverlap&&r.ignorePlacement||!p||(c.iconColliders=[]),this._addIconPlacement(c,i,t,r,o),s&&n&&this._addIconPlacement(c,i,t,r,o+l),c}_addIconPlacement(e,t,r,i,s){const n=r.pixelRatio,a=r.width/n,l=r.height/n,c=i.offset;let h=c[0],x=c[1];switch(i.anchor){case 0:h-=a/2,x-=l/2;break;case 1:x-=l/2;break;case 2:h-=a,x-=l/2;break;case 3:h-=a/2;break;case 4:h-=a/2,x-=l;break;case 5:break;case 7:x-=l;break;case 6:h-=a;break;case 8:h-=a,x-=l}const u=r.rect,d=2/n,f=h-d,y=x-d,_=f+u.width/n,g=y+u.height/n,m=new I(f,y),V=new I(_,g),B=new I(f,g),b=new I(_,y);if(0!==s){const e=Math.cos(s),t=Math.sin(s);m.rotate(e,t),V.rotate(e,t),B.rotate(e,t),b.rotate(e,t)}const w=new O(m,b,B,V,u,s,0,256,t,.5,o,0);if(e.shapes.push(w),(!i.allowOverlap||!i.ignorePlacement)&&p){const r=i.size,n=i.padding,c={xTile:t.x,yTile:t.y,dxPixels:h*r-n,dyPixels:x*r-n,hard:!i.optional,partIndex:0,width:a*r+2*n,height:l*r+2*n,angle:s,minLod:.5,maxLod:o};e.iconColliders.push(c)}}getTextPlacement(e,t,r,i){const s=new I(e.x,e.y),n=i.rotate*a,c=0===i.rotationAlignment,h=i.keepUpright,x=i.padding;let u=.5;const d=c?e.angle:0,f=e.segment>=0&&c,y=i.allowOverlap&&i.ignorePlacement?null:[],_=[],g=!f;let p=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,V=p,B=m;const b=(f||c)&&h,w=i.size/E;let M=!1;for(const a of t)if(a.vertical){M=!0;break}let P,v=0,k=0;if(!f&&M){const e=z.getTextBox(t,i.lineHeight*E);switch(i.anchor){case 1:v=e.height/2,k=-e.width/2;break;case 2:v=-e.height/2,k=e.width/2;break;case 3:v=e.height/2,k=e.width/2;break;case 4:v=-e.height/2,k=-e.width/2;break;case 5:v=e.height;break;case 7:k=-e.width;break;case 6:k=e.width;break;case 8:v=-e.height}}v+=i.offset[0]*E,k+=i.offset[1]*E;for(const a of t){const t=a.glyphMosaicItem;if(!t||t.rect.isEmpty)continue;const L=t.rect,A=t.metrics,N=t.page;if(y&&g){if(void 0!==P&&P!==a.y){let t,r,s,a;M?(t=-B+v,r=p+k,s=B-V,a=m-p):(t=p+v,r=V+k,s=m-p,a=B-V);const l={xTile:e.x,yTile:e.y,dxPixels:t*w-x,dyPixels:r*w-x,hard:!i.optional,partIndex:1,width:s*w+2*x,height:a*w+2*x,angle:n,minLod:.5,maxLod:o};y.push(l),p=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,V=p,B=m}P=a.y}const D=[];if(f){const i=.5*t.metrics.width,s=(a.x+A.left-4+i)*w*8;if(u=this._placeGlyph(e,u,s,r,e.segment,1,a.vertical,N,D),h&&(u=this._placeGlyph(e,u,s,r,e.segment,-1,a.vertical,N,D)),u>=2)break}else D.push(new U(s,d,d,N,!1)),c&&h&&D.push(new U(s,d+l,d+l,N,!1));const T=a.x+A.left,C=a.y-17-A.top,S=T+A.width,E=C+A.height;let z,F,R,G,j,q,K,H;if(!f&&M)if(a.vertical){const e=(T+S)/2-A.height/2,t=(C+E)/2+A.width/2;z=new I(-t-4+v,e-4+k),F=new I(z.x+L.width,z.y+L.height),R=new I(z.x,F.y),G=new I(F.x,z.y)}else z=new I(4-C+v,T-4+k),F=new I(z.x-L.height,z.y+L.width),R=new I(F.x,z.y),G=new I(z.x,F.y);else z=new I(T-4+v,C-4+k),F=new I(z.x+L.width,z.y+L.height),R=new I(z.x,F.y),G=new I(F.x,z.y);for(const r of D){let t,s,l,o;if(r.alternateVerticalGlyph){if(!j){const e=(C+E)/2+k;j=new I((T+S)/2+v-A.height/2-4,e+A.width/2+4),q=new I(j.x+L.height,j.y-L.width),K=new I(q.x,j.y),H=new I(j.x,q.y)}t=j,s=K,l=H,o=q}else t=z,s=R,l=G,o=F;const c=C,h=E,u=r.glyphAngle+n;if(0!==u){const e=Math.cos(u),r=Math.sin(u);t=t.clone(),s=s.clone(),l=l.clone(),o=o.clone(),t.rotate(e,r),o.rotate(e,r),s.rotate(e,r),l.rotate(e,r)}let d=0,P=256;if(f&&M?a.vertical?r.alternateVerticalGlyph?(d=32,P=96):(d=224,P=32):(d=224,P=96):(d=192,P=64),_.push(new O(t,l,s,o,L,r.labelAngle,d,P,r.anchor,r.minzoom,r.maxzoom,r.page)),y&&(!b||this._legible(r.labelAngle)))if(g)T<p&&(p=T),c<V&&(V=c),S>m&&(m=S),h>B&&(B=h);else if(r.minzoom<2){const t={xTile:e.x,yTile:e.y,dxPixels:(T+v)*w-x,dyPixels:(c+v)*w-x,hard:!i.optional,partIndex:1,width:(S-T)*w+2*x,height:(h-c)*w+2*x,angle:u,minLod:r.minzoom,maxLod:r.maxzoom};y.push(t)}}}if(u>=2)return null;if(y&&g){let t,r,s,a;M?(t=-B+v,r=p+k,s=B-V,a=m-p):(t=p+v,r=V+k,s=m-p,a=B-V);const l={xTile:e.x,yTile:e.y,dxPixels:t*w-x,dyPixels:r*w-x,hard:!i.optional,partIndex:1,width:s*w+2*x,height:a*w+2*x,angle:n,minLod:.5,maxLod:o};y.push(l)}const L=new R(_);return y&&y.length>0&&(L.textColliders=y),L}_legible(e){const t=x(e);return t<65||t>=193}_placeGlyph(e,t,r,i,s,n,a,x,u){let d=n;const f=d<0?c(e.angle+l,h):e.angle;let y=0;r<0&&(d*=-1,r*=-1,y=l),d>0&&++s;let _=new I(e.x,e.y),g=i[s],p=o;if(i.length<=s)return p;for(;;){const e=g.x-_.x,n=g.y-_.y,l=Math.sqrt(e*e+n*n),o=Math.max(r/l,t),m=e/l,V=n/l,I=c(Math.atan2(V,m)+y,h);if(u.push(new U(_,f,I,x,!1,o,p)),a&&u.push(new U(_,f,I,x,!0,o,p)),o<=t)return o;_=g.clone();do{if(s+=d,i.length<=s||s<0)return o;g=i[s]}while(_.isEqual(g));let B=g.x-_.x,b=g.y-_.y;const w=Math.sqrt(B*B+b*b);B*=l/w,b*=l/w,_.x-=B,_.y-=b,p=o}}}class j{constructor(e,t){this.values={};const r=t.keys,i=t.values;for(;e.next();)switch(e.tag()){case 1:this.id=e.getUInt64();break;case 2:{const t=e.getMessage(),s=this.values;for(;!t.empty();){const e=t.getUInt32(),n=t.getUInt32();s[r[e]]=i[n]}t.release();break}case 3:this.type=e.getUInt32();break;case 4:this._pbfGeometry=e.getMessage();break;default:e.skip()}}getGeometry(e){if(void 0!==this._geometry)return this._geometry;if(!this._pbfGeometry)return null;const t=this._pbfGeometry;let r,i;this._pbfGeometry=null,e?e.reset(this.type):r=[];let s,n=1,a=0,l=0,o=0;for(;!t.empty();){if(0===a){const e=t.getUInt32();n=7&e,a=e>>3}switch(a--,n){case 1:l+=t.getSInt32(),o+=t.getSInt32(),e?e.moveTo(l,o):(i&&r.push(i),i=[],i.push(new I(l,o)));break;case 2:l+=t.getSInt32(),o+=t.getSInt32(),e?e.lineTo(l,o):i.push(new I(l,o));break;case 7:e?e.close():i&&!i[0].equals(l,o)&&i.push(i[0].clone());break;default:throw t.release(),new Error("Invalid path operation")}}return e?s=e.result():(i&&r.push(i),s=r),t.release(),this._geometry=s,s}}class q extends u{constructor(){super(12)}add(e,t,r){const i=this.array;i.push(e),i.push(t),i.push(r)}}class K{constructor(e){for(this.extent=4096,this.keys=[],this.values=[],this._pbfLayer=e.clone();e.next();)switch(e.tag()){case 1:this.name=e.getString();break;case 3:this.keys.push(e.getString());break;case 4:this.values.push(e.processMessage(K._parseValue));break;case 5:this.extent=e.getUInt32();break;default:e.skip()}}getData(){return this._pbfLayer}static _parseValue(e){for(;e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getInt64();case 5:return e.getUInt64();case 6:return e.getSInt64();case 7:return e.getBool();default:e.skip()}return null}}class H extends u{constructor(e){super(e)}add(e,t,r,i,s,n,a,l){const o=this.array;let c=u.i1616to32(e,t);o.push(c);c=u.i8888to32(Math.round(31*r),Math.round(31*i),Math.round(31*s),Math.round(31*n)),o.push(c),c=u.i1616to32(a,0),o.push(c),l&&o.push(...l)}}class Y extends u{constructor(e){super(e)}add(e,t,r){const i=this.array;i.push(u.i1616to32(e,t)),r&&i.push(...r)}}class W extends u{constructor(e){super(e)}add(e,t,r,i,s,n,a){const l=this.array,o=this.index;let c=u.i1616to32(e,t);l.push(c);return c=u.i8888to32(Math.round(15*r),Math.round(15*i),s,n),l.push(c),a&&l.push(...a),o}}class Z extends u{constructor(e){super(e)}add(e,t,r,i,s,n,a,l,o,c,h,d){const f=this.array;let y=u.i1616to32(e,t);f.push(y),y=u.i1616to32(Math.round(8*r),Math.round(8*i)),f.push(y),y=u.i8888to32(s/4,n/4,l,o),f.push(y),y=u.i8888to32(0,x(a),10*c,Math.min(10*h,255)),f.push(y),d&&f.push(...d)}}class J extends u{constructor(e){super(e)}add(e,t,r,i,s){const n=this.array,a=u.i1616to32(2*e+r,2*t+i);n.push(a),s&&n.push(...s)}}class Q{constructor(e,t){this.layerExtent=4096,this._features=[],this.layer=e,this.zoom=t,this._filter=e.getFeatureFilter()}pushFeature(e){this._filter&&!this._filter.filter(e,this.zoom)||this._features.push(e)}hasFeatures(){return this._features.length>0}}class X extends Q{constructor(e,t,r,i){super(e,t),this.type=4,this._circleVertexBuffer=r,this._circleIndexBuffer=i}get circleIndexStart(){return this._circleIndexStart}get circleIndexCount(){return this._circleIndexCount}processFeatures(e){const t=this._circleVertexBuffer,r=this._circleIndexBuffer;this._circleIndexStart=3*r.index,this._circleIndexCount=0;const i=this.layer,s=this.zoom;e&&e.setExtent(this.layerExtent);for(const n of this._features){const a=n.getGeometry(e);if(!a)continue;const l=i.circleMaterial.encodeAttributes(n,s,i);for(const e of a)if(e)for(const i of e){const e=t.index;t.add(i.x,i.y,0,0,l),t.add(i.x,i.y,0,1,l),t.add(i.x,i.y,1,0,l),t.add(i.x,i.y,1,1,l),r.add(e+0,e+1,e+2),r.add(e+1,e+2,e+3),this._circleIndexCount+=6}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this._circleVertexBuffer.array.length,e+=this._circleIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let s=0;s<this.layerUIDs.length;s++)t[i++]=this.layerUIDs[s];t[i++]=this._circleIndexStart,t[i++]=this._circleIndexCount,t[i++]=this._circleVertexBuffer.array.length;for(let s=0;s<this._circleVertexBuffer.array.length;s++)r[i++]=this._circleVertexBuffer.array[s];t[i++]=this._circleIndexBuffer.array.length;for(let s=0;s<this._circleIndexBuffer.array.length;s++)t[i++]=this._circleIndexBuffer.array[s];return t.buffer}}const $=new B;class ee extends Q{constructor(e,t,r,i,s,n){super(e,t),this.type=1,this._fillVertexBuffer=r,this._fillIndexBuffer=i,this._outlineVertexBuffer=s,this._outlineIndexBuffer=n}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);let i=void 0===t.getPaintValue("fill-pattern",r)&&t.getPaintValue("fill-antialias",r);if(t.outlineUsesFillColor){if(i&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",r),s=t.getPaintValue("fill-opacity",r+1);e<1&&s<1&&(i=!1)}if(i&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",r),s=t.getPaintValue("fill-color",r+1);e[3]<1&&s[3]<1&&(i=!1)}}const{fillMaterial:s,outlineMaterial:n,hasDataDrivenFill:a,hasDataDrivenOutline:l}=t;for(const o of this._features){const c=a?s.encodeAttributes(o,r,t):null,h=i&&l?n.encodeAttributes(o,r,t):null,x=o.getGeometry(e),u=null==e?void 0:e.validateTessellation;this._processFeature(x,i,t.outlineUsesFillColor,c,h,u)}}serialize(){let e=10;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let s=0;s<this.layerUIDs.length;s++)t[i++]=this.layerUIDs[s];t[i++]=this._fillIndexStart,t[i++]=this._fillIndexCount,t[i++]=this._outlineIndexStart,t[i++]=this._outlineIndexCount,t[i++]=this._fillVertexBuffer.array.length;for(let s=0;s<this._fillVertexBuffer.array.length;s++)r[i++]=this._fillVertexBuffer.array[s];t[i++]=this._fillIndexBuffer.array.length;for(let s=0;s<this._fillIndexBuffer.array.length;s++)t[i++]=this._fillIndexBuffer.array[s];t[i++]=this._outlineVertexBuffer.array.length;for(let s=0;s<this._outlineVertexBuffer.array.length;s++)r[i++]=this._outlineVertexBuffer.array[s];t[i++]=this._outlineIndexBuffer.array.length;for(let s=0;s<this._outlineIndexBuffer.array.length;s++)t[i++]=this._outlineIndexBuffer.array[s];return t.buffer}_processFeature(e,t,r,i,s,n){if(!e)return;const a=e.length,l=!s||0===s.length;if(t&&(!r||l))for(let c=0;c<a;c++)this._processOutline(e[c],s);let o;for(let c=0;c<a;c++){const t=ee._area(e[c]);t>128?(void 0!==o&&this._processFill(e,o,i,n),o=[c]):t<-128&&void 0!==o&&o.push(c)}void 0!==o&&this._processFill(e,o,i,n)}_processOutline(e,t){const r=this._outlineVertexBuffer,i=this._outlineIndexBuffer,s=i.index;let n,a,l;const o=new I(0,0),c=new I(0,0),h=new I(0,0);let x=-1,u=-1,d=-1,f=-1,y=-1,_=!1;let g=e.length;if(g<2)return;const p=e[0];let m=e[g-1];for(;g&&m.isEqual(p);)--g,m=e[g-1];if(!(g-0<2)){for(let s=0;s<g;++s){0===s?(n=e[g-1],a=e[0],l=e[1],o.assignSub(a,n),o.normalize(),o.rightPerpendicular()):(n=a,a=l,l=s!==g-1?e[s+1]:e[0],o.assign(c));const p=this._isClipEdge(n,a);-1===f&&(_=p),c.assignSub(l,a),c.normalize(),c.rightPerpendicular();const m=o.x*c.y-o.y*c.x;h.assignAdd(o,c),h.normalize();const V=-h.x*-o.x+-h.y*-o.y;let I=Math.abs(0!==V?1/V:1);I>8&&(I=8),m>=0?(d=r.add(a.x,a.y,o.x,o.y,0,1,t),-1===f&&(f=d),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),u=r.add(a.x,a.y,I*-h.x,I*-h.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),x=u,u=d,d=r.add(a.x,a.y,h.x,h.y,0,1,t),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),u=r.add(a.x,a.y,c.x,c.y,0,1,t),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d)):(d=r.add(a.x,a.y,I*h.x,I*h.y,0,1,t),-1===f&&(f=d),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),u=r.add(a.x,a.y,-o.x,-o.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),x=u,u=d,d=r.add(a.x,a.y,-h.x,-h.y,0,-1,t),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),x=r.add(a.x,a.y,-c.x,-c.y,0,-1,t),x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d))}x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x>=0&&f>=0&&y>=0&&!_&&i.add(x,y,f),this._outlineIndexCount+=3*(i.index-s)}}_processFill(t,r,i,s){let n;r.length>1&&(n=[]);let a=0;for(const e of r)0!==a&&n.push(a),a+=t[e].length;const l=2*a,o=e.acquire();for(const e of r){const r=t[e],i=r.length;for(let e=0;e<i;++e)o.push(r[e].x,r[e].y)}const c=m(o,n,2);if(s&&V(o,n,2,c)>0){const e=[],s=[];if(function(e,t,r,i){let s,n;$.beginPolygon(e,t);for(const a of i){const e=r[a];if(!(e.length<3)){$.beginContour();for(let t=0;t<e.length;++t){s=e[t].x,n=e[t].y;const r=[s,n,0];$.addVertex(r,r)}$.endContour()}}$.endPolygon()}(e,s,t,r),s.length>0){const t=this._fillVertexBuffer.index;let r=0;for(;r<e.length;)this._fillVertexBuffer.add(e[r++],e[r++],i);let n=0;for(;n<s.length;)this._fillIndexBuffer.add(t+s[n+0],t+s[n+1],t+s[n+2]),n+=3;this._fillIndexCount+=s.length}}else{const e=c.length;if(e>0){const t=this._fillVertexBuffer.index;let r=0;for(;r<l;)this._fillVertexBuffer.add(o[r++],o[r++],i);let s=0;for(;s<e;)this._fillIndexBuffer.add(t+c[s++],t+c[s++],t+c[s++]);this._fillIndexCount+=e}}e.release(o)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const r=e.length-1;for(let i=0;i<r;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[r].x-e[0].x)*(e[r].y+e[0].y),.5*t}}const te=1/3.8;class re extends Q{constructor(e,t,r,i){super(e,t),this.type=2,this._tessellationOptions={},this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_hasPattern:null,_ddValues:null,_capType:null,_joinType:null,_miterLimitCosine:null,_roundLimitCosine:null},this.tessellationProperties._lineVertexBuffer=r,this.tessellationProperties._lineIndexBuffer=i,this.tessellationProperties._hasPattern=e.getPaintValue("line-pattern",this.zoom)||e.getPaintValue("line-dasharray",this.zoom).length>0,this._isThinLine=e.isThinLine,this._isThinLine?this._tessellationCallbacks={vertex:ie(this.tessellationProperties),bridge:se(this.tessellationProperties)}:this._tessellationCallbacks={vertex:ne(this.tessellationProperties),bridge:ae(this.tessellationProperties)}}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}processFeatures(e){this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const t=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);for(const i of this._features){const s=t.hasDataDrivenLine?t.lineMaterial.encodeAttributes(i,r,t):null;this.tessellationProperties._capType=t.getLayoutValue("line-cap",r,i),this.tessellationProperties._joinType=t.getLayoutValue("line-join",r,i),this.tessellationProperties._miterLimitCosine=w(t.getLayoutValue("line-miter-limit",r,i)),this.tessellationProperties._roundLimitCosine=w(t.getLayoutValue("line-round-limit",r,i));const n=i.getGeometry(e);this._processFeature(n,s)}M()}serialize(){let e=6;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let s=0;s<this.layerUIDs.length;s++)t[i++]=this.layerUIDs[s];t[i++]=this._lineIndexStart,t[i++]=this._lineIndexCount,t[i++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let s=0;s<this.tessellationProperties._lineVertexBuffer.array.length;s++)r[i++]=this.tessellationProperties._lineVertexBuffer.array[s];t[i++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let s=0;s<this.tessellationProperties._lineIndexBuffer.array.length;s++)t[i++]=this.tessellationProperties._lineIndexBuffer.array[s];return t.buffer}_processFeature(e,t){if(!e)return;const r=e.length;for(let i=0;i<r;i++)this._processGeometry(e[i],t)}_processGeometry(e,t){if(e.length<2)return;let r,i,s=e[0],n=1;for(;n<e.length;)r=e[n].x-s.x,i=e[n].y-s.y,r*r+i*i<1e-6?e.splice(n,1):(s=e[n],++n);if(e.length<2)return;const a=3*this.tessellationProperties._lineIndexBuffer.index;this._tessellationOptions.trackDistance=this.tessellationProperties._hasPattern,this._tessellationOptions.initialDistance=0,this._tessellationOptions.thin=this._isThinLine,this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=te,this._tessellationOptions.enableOuterBisectorSplit=this.tessellationProperties._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=te,this._tessellationOptions.enableInnerBisectorSplit=this.tessellationProperties._hasPattern,this.tessellationProperties._ddValues=t,P(e,this._tessellationOptions,this._tessellationCallbacks),this._lineIndexCount+=3*this.tessellationProperties._lineIndexBuffer.index-a}}const ie=e=>t=>{t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)},se=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,t.rightEntry2,t.leftExit2)},ne=e=>t=>{const r=2===e._joinType?e._miterLimitCosine:e._roundLimitCosine,i=t.isCap&&0!==e._capType;let s,n=!1;if(t.cosine>.97?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)):t.cosine<1-.97?(t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.canSplit?(b(),t.sign>0?(t.splitInner?(t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftInner.x,t.leftInner.y,0,-1,t.distance,e._ddValues),t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightInner.x,t.rightInner.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)),t.cosine<r?(n=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.splitOuter?(n=n||t.gapOuter,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftOuter.x,-t.leftOuter.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightOuter.x,-t.rightOuter.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.splitInner?(t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftInner.x,-t.leftInner.y,0,1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightInner.x,-t.rightInner.y,0,1,t.distance,e._ddValues)):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)),t.cosine<r?(n=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):t.splitOuter?(n=n||t.gapOuter,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftOuter.x,t.leftOuter.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightOuter.x,t.rightOuter.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)))):t.sign>0?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.cosine<r?(n=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues),t.cosine<r?(n=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues))),t.canSplit&&(t.splitInner||t.splitOuter)||n||i?(s=t.entry1=t.exit1=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,0,0,0,0,t.distance,e._ddValues)):s=t.entry1=t.exit1=null,n&&1!==e._joinType)e._lineIndexBuffer.add(s,t.sign>0?t.exit2:t.entry0,t.sign>0?t.entry2:t.exit0);else if(i&&1===e._capType||n&&1===e._joinType){let r,i,n,a,l,o;if(t.isCap){const e=Math.PI;l=Math.ceil(e/.8),o=e/l,t.isFirstVertex?(r=t.prevNormal.x,i=t.prevNormal.y,n=t.entry0,a=t.entry2):t.isLastVertex&&(r=-t.nextNormal.x,i=-t.nextNormal.y,n=t.exit2,a=t.exit0)}else{const e=2*Math.acos(t.cosine);l=Math.ceil(e/.8),o=e/l,r=t.sign>0?-t.prevNormal.x:t.nextNormal.x,i=t.sign>0?-t.prevNormal.y:t.nextNormal.y,n=t.sign>0?t.entry2:t.exit0,a=t.sign>0?t.exit2:t.entry0}const c=Math.cos(o),h=Math.sin(o),x=h*r+c*i;let u,d;r=c*r-h*i,i=x;for(let f=0;f<l;++f){if(u=d,f<l-1)if(t.isCap){const s=t.isFirstVertex?-1:1;d=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,s,0,t.distance,e._ddValues)}else d=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,0,t.sign,t.distance,e._ddValues);e._lineIndexBuffer.add(0===f?n:u,s,f===l-1?a:d);const o=h*r+c*i;r=c*r-h*i,i=o}}else if(i&&2===e._capType){const r=t.isFirstVertex?1:-1;let i,n;e._hasPattern?(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,-r,-1,t.distance,e._ddValues),n=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,-r,1,t.distance,e._ddValues)):(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,0,-1,t.distance,e._ddValues),n=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,0,1,t.distance,e._ddValues)),r>0?(e._lineIndexBuffer.add(s,t.entry2,n),e._lineIndexBuffer.add(s,n,i),e._lineIndexBuffer.add(s,i,t.entry0)):(e._lineIndexBuffer.add(s,n,t.exit2),e._lineIndexBuffer.add(s,i,n),e._lineIndexBuffer.add(s,t.exit0,i))}},ae=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,null!=t.leftExit1?t.leftExit1:t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,null!=t.rightEntry1?t.rightEntry1:t.rightEntry2,null!=t.leftExit1?t.leftExit1:t.leftExit2),null!=t.leftExit1&&null!=t.rightEntry1?(e._lineIndexBuffer.add(t.leftExit1,t.rightEntry1,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)):null!=t.leftExit1?e._lineIndexBuffer.add(t.leftExit1,t.rightEntry2,t.leftExit2):null!=t.rightEntry1&&e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)};function le(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class oe extends Q{constructor(e,t,r,i,s,n,a,l){super(e,t),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,this._iconVertexBuffer=r,this._iconIndexBuffer=i,this._textVertexBuffer=s,this._textIndexBuffer=n,this._placementEngine=a,this._workerTileHandler=l}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,r,i){const s=this.layer,n=this.zoom;e&&e.setExtent(this.layerExtent);const a=s.getLayoutProperty("icon-image"),l=s.getLayoutProperty("text-field");let o=s.getLayoutProperty("text-transform"),c=s.getLayoutProperty("text-font");const h=[];let x,u,d,f;a&&!a.isDataDriven&&(x=a.getValue(n)),l&&!l.isDataDriven&&(u=l.getValue(n)),o&&o.isDataDriven||(d=s.getLayoutValue("text-transform",n),o=null),c&&c.isDataDriven||(f=s.getLayoutValue("text-font",n),c=null);for(const y of this._features){const _=y.getGeometry(e);if(!_||0===_.length)continue;let g,p;a&&(g=a.isDataDriven?a.getValue(n,y):this._replaceKeys(x,y.values),g&&r.add(g));let m=!1;if(l&&(p=l.isDataDriven?l.getValue(n,y):this._replaceKeys(u,y.values),p)){switch(p=p.replace(/\\n/g,"\n"),o&&(d=o.getValue(n,y)),d){case 2:p=p.toLowerCase();break;case 1:p=p.toUpperCase()}if(oe._bidiEngine.hasBidiChar(p)){let e;e="rtl"===oe._bidiEngine.checkContextual(p)?"IDNNN":"ICNNN",p=oe._bidiEngine.bidiTransform(p,e,"VLYSN"),m=!0}const e=p.length;if(e>0){c&&(f=c.getValue(n,y));for(const t of f){let r=i[t];r||(r=i[t]=new Set);for(let t=0;t<e;t++){const e=p.charCodeAt(t);r.add(e)}}}}if(!g&&!p)continue;const V=s.getLayoutValue("symbol-sort-key",n,y),I={feature:y,sprite:g,label:p,rtl:m,geometry:_,hash:(p?t(p):0)^(g?t(g):0),priority:V,textFont:f};h.push(I)}this._symbolFeatures=h}processFeatures(e){e&&e.setExtent(this.layerExtent);const t=this.layer,r=this.zoom,i=t.getLayoutValue("symbol-placement",r),s=0!==i,n=8*t.getLayoutValue("symbol-spacing",r),l=t.getLayoutProperty("icon-image"),o=t.getLayoutProperty("text-field"),c=l?new d(t,r,s):null,h=o?new f(t,r,s):null,x=this._workerTileHandler;let u;l&&(u=x.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const y=[];let _=1;h&&h.size&&(_=h.size/E);const g=h?h.maxAngle*a:0,p=h?8*h.size:0;for(const a of this._symbolFeatures){let e,t;c&&u&&a.sprite&&(e=u[a.sprite],e&&e.sdf&&(this._isIconSDF=!0)),e&&c.update(r,a.feature);let l=0;const o=a.label;if(o){h.update(r,a.feature);const e=s?h.keepUpright:h.writingMode&&h.writingMode.indexOf(1)>=0;let i=.5;switch(h.anchor){case 5:case 1:case 7:i=0;break;case 6:case 2:case 8:i=1}let n=.5;switch(h.anchor){case 5:case 3:case 6:n=0;break;case 7:case 4:case 8:n=1}let c=.5;switch(h.justify){case 0:c=i;break;case 1:c=0;break;case 3:c=1}const u=h.letterSpacing*E,d=s?0:h.maxWidth*E,f=h.lineHeight*E,y=a.textFont.map((e=>x.getGlyphItems(e)));if(t=new z(y,d,f,u,i,n,c).getShaping(o,a.rtl,e),t&&t.length>0){let e=1e30,r=-1e30;for(const i of t)e=Math.min(e,i.x),r=Math.max(r,i.x);l=(r-e+48)*_*8}}for(let r of a.geometry){const o=[];if(1===i){if(t&&t.length>0&&h&&h.size){const e=8*h.size*(2+Math.min(2,4*Math.abs(h.offset[1])));r=oe._smoothVertices(r,e)}oe._pushAnchors(o,r,n,l)}else 2===i?oe._pushCenterAnchor(o,r):3===a.feature.type?oe._pushCentroid(o,r):o.push(new F(r[0].x,r[0].y));for(const i of o){if(i.x<0||i.x>4096||i.y<0||i.y>4096)continue;if(s&&l>0&&0===h.rotationAlignment&&!oe._honorsTextMaxAngle(r,i,l,g,p))continue;const n={shaping:t,line:r,iconMosaicItem:e,anchor:i,symbolFeature:a,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};y.push(n),this._processFeature(n,c,h)}}}y.sort(le),this._addPlacedGlyphs(),this._symbolInstances=y}serialize(){let e=11;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=oe.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;const t=new Uint32Array(e),r=new Int32Array(t.buffer),i=new Float32Array(t.buffer);let s=0;t[s++]=this.type,t[s++]=this.layerUIDs.length;for(let n=0;n<this.layerUIDs.length;n++)t[s++]=this.layerUIDs[n];t[s++]=this._isIconSDF?1:0,t[s++]=this.markerPageMap.size;for(const[n,[a,l]]of this.markerPageMap)t[s++]=n,t[s++]=a,t[s++]=l;t[s++]=this.glyphsPageMap.size;for(const[n,[a,l]]of this.glyphsPageMap)t[s++]=n,t[s++]=a,t[s++]=l;t[s++]=this._iconVertexBuffer.index/4,t[s++]=this._textVertexBuffer.index/4,s=oe.serializeSymbols(t,r,i,s,this._symbolInstances),t[s++]=this._iconVertexBuffer.array.length;for(let n=0;n<this._iconVertexBuffer.array.length;n++)r[s++]=this._iconVertexBuffer.array[n];t[s++]=this._iconIndexBuffer.array.length;for(let n=0;n<this._iconIndexBuffer.array.length;n++)t[s++]=this._iconIndexBuffer.array[n];t[s++]=this._textVertexBuffer.array.length;for(let n=0;n<this._textVertexBuffer.array.length;n++)r[s++]=this._textVertexBuffer.array[n];t[s++]=this._textIndexBuffer.array.length;for(let n=0;n<this._textIndexBuffer.array.length;n++)t[s++]=this._textIndexBuffer.array[n];return t.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const r of e||[]){t+=4,t+=1;for(const e of r.textColliders)t+=10;for(const e of r.iconColliders)t+=10;t+=1,t+=2*r.textVertexRanges.length,t+=1,t+=2*r.iconVertexRanges.length}return t}static serializeSymbols(e,t,r,i,s){s=s||[],t[i++]=s.length;for(const n of s){t[i++]=n.anchor.x,t[i++]=n.anchor.y,t[i++]=n.symbolFeature.hash,t[i++]=n.symbolFeature.priority,t[i++]=n.textColliders.length+n.iconColliders.length;for(const e of n.textColliders)t[i++]=e.xTile,t[i++]=e.yTile,t[i++]=e.dxPixels,t[i++]=e.dyPixels,t[i++]=e.hard?1:0,t[i++]=e.partIndex,r[i++]=e.minLod,r[i++]=e.maxLod,t[i++]=e.width,t[i++]=e.height;for(const e of n.iconColliders)t[i++]=e.xTile,t[i++]=e.yTile,t[i++]=e.dxPixels,t[i++]=e.dyPixels,t[i++]=e.hard?1:0,t[i++]=e.partIndex,r[i++]=e.minLod,r[i++]=e.maxLod,t[i++]=e.width,t[i++]=e.height;t[i++]=n.textVertexRanges.length;for(const[e,r]of n.textVertexRanges)t[i++]=e,t[i++]=r;t[i++]=n.iconVertexRanges.length;for(const[e,r]of n.iconVertexRanges)t[i++]=e,t[i++]=r}return i}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,r){return r in t?t[r]:""}))}_processFeature(e,t,r){const{line:i,iconMosaicItem:s,shaping:n,anchor:a}=e,l=this.zoom,o=this.layer,c=!!s;let h=!0;c&&(h=t.optional||!s);const x=n&&n.length>0;let u,d,f=!0;if(x&&(f=r.optional),c&&(u=this._placementEngine.getIconPlacement(a,s,t)),(u||h)&&(x&&(d=this._placementEngine.getTextPlacement(a,n,i,r)),d||f)){if(u&&d||(f||h?f||d?h||u||(d=null):u=null:(u=null,d=null)),d){const t=o.hasDataDrivenText?o.textMaterial.encodeAttributes(e.symbolFeature.feature,l,o):null;if(this._storePlacedGlyphs(e,d.shapes,l,r.rotationAlignment,t),d.textColliders){e.textColliders=d.textColliders;for(const e of d.textColliders){e.minLod=Math.max(l+y(e.minLod),0),e.maxLod=Math.min(l+y(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),s=e.dxPixels*r-e.dyPixels*i,n=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(s,a,o,h),d=Math.max(s,a,o,h),f=Math.min(n,l,c,x),y=Math.max(n,l,c,x);e.dxPixels=u,e.dyPixels=f,e.width=d-u,e.height=y-f}}}}if(u){const r=o.hasDataDrivenIcon?o.iconMaterial.encodeAttributes(e.symbolFeature.feature,l,o):null;if(this._addPlacedIcons(e,u.shapes,l,s.page,1===t.rotationAlignment,r),u.iconColliders){e.iconColliders=u.iconColliders;for(const e of u.iconColliders){e.minLod=Math.max(l+y(e.minLod),0),e.maxLod=Math.min(l+y(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),s=e.dxPixels*r-e.dyPixels*i,n=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(s,a,o,h),d=Math.max(s,a,o,h),f=Math.min(n,l,c,x),y=Math.max(n,l,c,x);e.dxPixels=u,e.dyPixels=f,e.width=d-u,e.height=y-f}}}}}}_addPlacedIcons(e,t,r,i,s,n){const a=Math.max(r-1,0),l=this._iconVertexBuffer,o=this._iconIndexBuffer,c=this._markerMap;for(const h of t){const t=s?0:Math.max(r+y(h.minzoom),a),x=s?25:Math.min(r+y(h.maxzoom),25);if(x<=t)continue;const u=h.tl,d=h.tr,f=h.bl,_=h.br,g=h.mosaicRect,p=h.labelAngle,m=h.minAngle,V=h.maxAngle,I=h.anchor,B=l.index,b=g.x,w=g.y,M=b+g.width,P=w+g.height,v=l.index;l.add(I.x,I.y,u.x,u.y,b,w,p,m,V,t,x,n),l.add(I.x,I.y,d.x,d.y,M,w,p,m,V,t,x,n),l.add(I.x,I.y,f.x,f.y,b,P,p,m,V,t,x,n),l.add(I.x,I.y,_.x,_.y,M,P,p,m,V,t,x,n),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===v?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([v,4]),o.add(B+0,B+1,B+2),o.add(B+1,B+2,B+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,r=this._glyphMap;for(const[i,s]of this._glyphBufferDataStorage)for(const n of s){const s=e.index,a=n.symbolInstance,l=n.ddAttributes,o=e.index;e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.tl[0],n.tl[1],n.xmin,n.ymin,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.tr[0],n.tr[1],n.xmax,n.ymin,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.bl[0],n.bl[1],n.xmin,n.ymax,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.br[0],n.br[1],n.xmax,n.ymax,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,l),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===o?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([o,4]),t.add(s+0,s+1,s+2),t.add(s+1,s+2,s+3),r.has(i)?r.get(i)[1]+=6:r.set(i,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,r,i,s){const n=Math.max(r-1,0),a=1===i;let l,o,c,h,x,u,d,f,_,g,p;for(const m of t)l=a?0:Math.max(r+y(m.minzoom),n),o=a?25:Math.min(r+y(m.maxzoom),25),o<=l||(c=m.tl,h=m.tr,x=m.bl,u=m.br,d=m.labelAngle,f=m.minAngle,_=m.maxAngle,g=m.anchor,p=m.mosaicRect,this._glyphBufferDataStorage.has(m.page)||this._glyphBufferDataStorage.set(m.page,[]),this._glyphBufferDataStorage.get(m.page).push({glyphAnchor:[g.x,g.y],tl:[c.x,c.y],tr:[h.x,h.y],bl:[x.x,x.y],br:[u.x,u.y],xmin:p.x,ymin:p.y,xmax:p.x+p.width,ymax:p.y+p.height,labelAngle:d,minAngle:f,maxAngle:_,minLod:l,maxLod:o,placementLod:n,symbolInstance:e,ddAttributes:s}))}static _pushAnchors(e,t,r,i){r+=i;let s=0;const n=t.length-1;for(let x=0;x<n;x++)s+=I.distance(t[x],t[x+1]);let a=i||r;if(a*=.5,s<=a)return;const l=a/s;let o=0,c=-(r=s/Math.max(Math.round(s/r),1))/2;const h=t.length-1;for(let x=0;x<h;x++){const i=t[x],s=t[x+1],n=s.x-i.x,a=s.y-i.y,h=Math.sqrt(n*n+a*a);let u;for(;c+r<o+h;){c+=r;const t=(c-o)/h,d=_(i.x,s.x,t),f=_(i.y,s.y,t);void 0===u&&(u=Math.atan2(a,n)),e.push(new F(d,f,u,x,l))}o+=h}}static _pushCenterAnchor(e,t){let r=0;const i=t.length-1;for(let l=0;l<i;l++)r+=I.distance(t[l],t[l+1]);const s=r/2;let n=0;const a=t.length-1;for(let l=0;l<a;l++){const r=t[l],i=t[l+1],a=i.x-r.x,o=i.y-r.y,c=Math.sqrt(a*a+o*o);if(s<n+c){const t=(s-n)/c,h=_(r.x,i.x,t),x=_(r.y,i.y,t),u=Math.atan2(o,a);return void e.push(new F(h,x,u,l,0))}n+=c}}static _deviation(e,t,r){const i=(t.x-e.x)*(r.x-t.x)+(t.y-e.y)*(r.y-t.y),s=(t.x-e.x)*(r.y-t.y)-(t.y-e.y)*(r.x-t.x);return Math.atan2(s,i)}static _honorsTextMaxAngle(e,t,r,i,s){let n=0;const a=r/2;let l=new I(t.x,t.y),o=t.segment+1;for(;n>-a;){if(--o,o<0)return!1;n-=I.distance(e[o],l),l=e[o]}n+=I.distance(e[o],e[o+1]);const c=[];let h=0;const x=e.length;for(;n<a;){const t=e[o];let r,a=o;do{if(++a,a===x)return!1;r=e[a]}while(r.isEqual(t));let l,u=a;do{if(++u,u===x)return!1;l=e[u]}while(l.isEqual(r));const d=this._deviation(t,r,l);for(c.push({deviation:d,distToAnchor:n}),h+=d;n-c[0].distToAnchor>s;)h-=c.shift().deviation;if(Math.abs(h)>i)return!1;n+=I.distance(r,l),o=a}return!0}static _smoothVertices(e,t){if(t<=0)return e;let r=e.length;if(r<3)return e;const i=[];let s=0,n=0;i.push(0);for(let f=1;f<r;f++){const t=I.distance(e[f],e[f-1]);t>0&&(s+=t,i.push(s),n++,n!==f&&(e[n]=e[f]))}if(r=n+1,r<3)return e;t=Math.min(t,.2*s);const a=e[0].x,l=e[0].y,o=e[r-1].x,c=e[r-1].y,h=I.sub(e[0],e[1]);h.normalize(),e[0].x+=t*h.x,e[0].y+=t*h.y,h.assignSub(e[r-1],e[r-2]),h.normalize(),e[r-1].x+=t*h.x,e[r-1].y+=t*h.y,i[0]-=t,i[r-1]+=t;const x=[];x.push(new I(a,l));const u=1e-6,d=.5*t;for(let f=1;f<r-1;f++){let s=0,n=0,a=0;for(let r=f-1;r>=0;r--){const l=d+i[r+1]-i[f];if(l<0)break;const o=i[r+1]-i[r],c=i[f]-i[r]<d?1:l/o;if(c<u)break;const h=c*c,x=c*l-.5*h*o,y=c*o/t,_=e[r+1],g=e[r].x-_.x,p=e[r].y-_.y;s+=y/x*(_.x*c*l+.5*h*(l*g-o*_.x)-h*c*o*g/3),n+=y/x*(_.y*c*l+.5*h*(l*p-o*_.y)-h*c*o*p/3),a+=y}for(let l=f+1;l<r;l++){const r=d-i[l-1]+i[f];if(r<0)break;const o=i[l]-i[l-1],c=i[l]-i[f]<d?1:r/o;if(c<u)break;const h=c*c,x=c*r-.5*h*o,y=c*o/t,_=e[l-1],g=e[l].x-_.x,p=e[l].y-_.y;s+=y/x*(_.x*c*r+.5*h*(r*g-o*_.x)-h*c*o*g/3),n+=y/x*(_.y*c*r+.5*h*(r*p-o*_.y)-h*c*o*p/3),a+=y}x.push(new I(s/a,n/a))}return x.push(new I(o,c)),e[0].x=a,e[0].y=l,e[r-1].x=o,e[r-1].y=c,x}static _pushCentroid(e,t){const r=4096,i=4096,s=t.length-1;let n=0,a=0,l=0,o=t[0].x,c=t[0].y;o>r&&(o=r),o<0&&(o=0),c>i&&(c=i),c<0&&(c=0);for(let h=1;h<s;h++){let e=t[h].x,s=t[h].y,x=t[h+1].x,u=t[h+1].y;e>r&&(e=r),e<0&&(e=0),s>i&&(s=i),s<0&&(s=0),x>r&&(x=r),x<0&&(x=0),u>i&&(u=i),u<0&&(u=0);const d=(e-o)*(u-c)-(x-o)*(s-c);n+=d*(o+e+x),a+=d*(c+s+u),l+=d}n/=3*l,a/=3*l,isNaN(n)||isNaN(a)||e.push(new F(n,a))}}oe._bidiEngine=new A;class ce{constructor(e,t,i,s,n){if(this._pbfTiles={},this._tileClippers={},this._client=i,this._tile=t,n){this._styleLayerUIDs=new Set;for(const e of n)this._styleLayerUIDs.add(e)}this._styleRepository=s,this._layers=this._styleRepository.layers;const[a,l,o]=t.tileKey.split("/").map(parseFloat);this._level=a;const c=Math.max(8,Math.round(1*this._level)-8);for(const h of Object.keys(e)){const t=e[h];if(this._pbfTiles[h]=new r(new Uint8Array(t.protobuff),new DataView(t.protobuff)),t.refKey){const[e]=t.refKey.split("/").map(parseFloat),r=a-e;if(r>0){const e=(1<<r)-1,t=l&e,i=o&e;this._tileClippers[h]=new v(r,t,i,8,c)}}this._tileClippers[h]||(this._tileClippers[h]=new k)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=this._initialize(e),{returnedBuckets:r}=t;this._processLayers(t),this._linkReferences(t),this._filterFeatures(t);const i=new Set,s={};for(const a of r)3===a.type&&a.getResources(a.tileClipper,i,s);if(this._tile.status===N.INVALID)return Promise.resolve([]);const n=this._fetchResources(i,s,e);return Promise.all(n).then((()=>this._processFeatures(t.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:r,zoom:i,sourceNameToTileClipper:s,sourceNameToUniqueSourceLayerBuckets:n,sourceNameToUniqueSourceLayers:a,returnedBuckets:l,layerIdToBucket:o,referencerUIDToReferencedId:c}=e;for(let h=r.length-1;h>=0;h--){const e=r[h];if(!this._canParseStyleLayer(e.uid)||e.minzoom&&i<Math.floor(e.minzoom)||e.maxzoom&&i>=e.maxzoom||0===e.type)continue;if(!t[e.source]||!s[e.source])continue;const x=t[e.source],u=s[e.source],d=e.sourceLayer,f=x[d];if(f){let t=a[e.source];if(t||(t=a[e.source]=new Set),t.add(e.sourceLayer),e.refLayerId)c.set(e.uid,e.refLayerId);else{const t=this._createBucket(e);if(t){t.layerUIDs=[e.uid],t.layerExtent=f.extent,t.tileClipper=u;let r=n[e.source];r||(r=n[e.source]={});let i=r[d];i||(i=r[d]=[]),i.push(t),l.push(t),o[e.id.toLowerCase()]=t}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:t,sourceNameToTileData:r,sourceNameToUniqueSourceLayerBuckets:s,sourceNameToUniqueSourceLayers:n}=e,a=10*this._level,l=10*(this._level+1),o=[],c=[];for(const i of Object.keys(n))n[i].forEach((e=>{o.push(e),c.push(i)}));for(let h=0;h<o.length;h++){const e=c[h],n=o[h];if(!r[e]||!s[e])continue;const x=r[e][n],u=s[e][n];if(!u||0===u.length)continue;if(i(t))return;const d=x.getData();for(;d.nextTag(2);){const e=d.getMessage(),t=new j(e,x);e.release();const r=t.values;if(r){const e=r._minzoom;if(e&&e>=l)continue;const t=r._maxzoom;if(t&&t<=a)continue}for(const i of u)i.pushFeature(t)}}}_fetchResources(e,t,r){const i=[],s=this._tile.getWorkerTileHandler();let n,a;e.size>0&&(n=s.fetchSprites(e,this._client,r),i.push(n));for(const l in t){const e=t[l];e.size>0&&(a=s.fetchGlyphs(this._tile.tileKey,l,e,this._client,r),i.push(a))}return i}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()||this._canParseStyleLayer(e.layer.uid)));for(const r of t)r.processFeatures(r.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const i=e[r],s={};for(;i.next();)switch(i.tag()){case 3:{const e=i.getMessage(),t=new K(e);e.release(),s[t.name]=t;break}default:i.skip()}t[r]=s}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new ee(e,this._level,new Y(e.fillMaterial.getStride()),new q,new W(e.outlineMaterial.getStride()),new q)}_createLineBucket(e){return new re(e,this._level,new H(e.lineMaterial.getStride()),new q)}_createCircleBucket(e){return new X(e,this._level,new J(e.circleMaterial.getStride()),new q)}_createSymbolBucket(e){const t=this._tile;return new oe(e,this._level,new Z(e.iconMaterial.getStride()),new q,new Z(e.textMaterial.getStride()),new q,t.placementEngine,t.getWorkerTileHandler())}}class he{constructor(e,t,r,i){this.status=N.INITIALIZED,this.placementEngine=new G,this.tileKey=e,this.refKeys=t,this._workerTileHandler=r,this._styleRepository=i}release(){this.tileKey="",this.refKeys=null,this.status=N.INITIALIZED,this._workerTileHandler=null}async parse(e,t,r){const i=r&&r.signal;if(s(i)){const e=()=>{i.removeEventListener("abort",e),this.status=N.INVALID};i.addEventListener("abort",e)}let a;try{a=await this._parse(e,r)}catch(o){if(n(o))throw o;return{result:[],transferList:[]}}this.status=N.READY;const l=[];for(const s of a){const e=s.serialize();l.push(e)}return{result:l,transferList:l.length<=t&&l}}setObsolete(){this.status=N.INVALID}getLayers(){return this._workerTileHandler.getLayers()}getWorkerTileHandler(){return this._workerTileHandler}async _parse(e,t){const r=e.sourceName2DataAndRefKey;return 0===Object.keys(r).length?[]:(this.status=N.MODIFIED,new ce(r,this,t.client,this._styleRepository,e.styleLayerUIDs).parse(t))}}export default class{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,t){const{key:r}=e,i={};for(const n of Object.keys(e.sourceName2DataAndRefKey)){const t=e.sourceName2DataAndRefKey[n];i[n]=t.refKey}const s=new he(r,i,this,this._styleRepository);try{return await s.parse(e,this._vectorTileLayerMaxBuffers,t)}catch(a){if(s.setObsolete(),s.release(),!n(a))throw a;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const r of e){const e=r.type,i=r.data;switch(e){case 0:t.setPaintProperties(i.layerName,i.paint);break;case 1:t.setLayoutProperties(i.layerName,i.layout);break;case 3:t.deleteStyleLayer(i.layerName);break;case 2:t.setStyleLayer(i.layer,i.index)}}}setStyle(e){this._styleRepository=new g(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,r){const i=[],s=this._spriteInfo;return e.forEach((e=>{void 0===s[e]&&i.push(e)})),0===i.length?Promise.resolve():t.invoke("getSprites",i,{signal:r&&r.signal}).then((e=>{for(const t in e){const r=e[t];s[t]=r}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,r,i,s){const n=[];let a=this._glyphInfo[t];return a?r.forEach((e=>{a[e]||n.push(e)})):(a=this._glyphInfo[t]=[],r.forEach((e=>n.push(e)))),0===n.length?Promise.resolve():i.invoke("getGlyphs",{tileID:e,font:t,codePoints:n},s).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}
