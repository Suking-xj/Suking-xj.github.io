import{p as e,y as i,q as r,h as a,dl as s}from"./vendor.abf366c9.js";import t from"./FeatureLayerView2D.f318acd2.js";import"./definitions.6737c10c.js";import"./LayerView2D.6b7d6a0c.js";import"./Container.9714e1c0.js";import"./mat4f32.a5cabe00.js";import"./_commonjsHelpers.f2a458db.js";import"./clickToleranceUtils.1b8c692d.js";import"./drapedUtils.fa892ade.js";import"./schemaUtils.eb60e7e9.js";import"./MD5.1ef35834.js";import"./Utils.5228be88.js";import"./FramebufferObject.55526cd6.js";import"./MaterialKey.940ba235.js";import"./visualVariablesUtils.99d558bb.js";import"./Rect.b51904ac.js";import"./BidiEngine.9b392b22.js";import"./popupUtils.f8daa8a4.js";const l=t=>{let l=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return s(this.layer.fields,["*"])}};return e([i()],l.prototype,"layer",void 0),e([i({readOnly:!0})],l.prototype,"availableFields",null),l=e([r("esri.views.layers.OGCFeatureLayerView")],l),l};let o=class extends(l(t)){};o=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],o);var p=o;export default p;
