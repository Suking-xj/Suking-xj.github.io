var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,o=(t,r,s)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s,l=(e,t)=>{for(var r in t||(t={}))i.call(t,r)&&o(e,r,t[r]);if(s)for(var r of s(t))a.call(t,r)&&o(e,r,t[r]);return e},n=(e,s)=>t(e,r(s));import{fL as p,gp as c,fM as y,fN as u,cA as m,cB as h,cC as d,cD as g,gV as b,j as f,cH as v,r as x,gH as S,h as O,U as w,B as j,bN as P,di as I,f$ as q,p as E,y as M,co as N,bm as L,fi as J,cG as R,q as F}from"./vendor.abf366c9.js";import{r as U}from"./scaleUtils.5e438c1b.js";import{h as T,y as A,G as D}from"./SublayersOwner.e7735d89.js";import{e as V}from"./sublayerUtils.2c5b95a7.js";import{n as H}from"./ExportImageParameters.344d3519.js";import"./Version.5394fe4b.js";let $=class extends(p(c(y(u(T(A(m(h(d(g(b(f(v))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?l({url:e},t):e}load(e){const t=x(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=S(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;a=V(i,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");a=V(i,e.sublayers,S(e.origin))}}const o=[],n=l({writeSublayerStructure:a},s);let p=a;i.forEach((e=>{const t=e.write({},n);o.push(t),p=p||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),p&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const i=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new H({layer:this,scale:U({extent:e,width:t})*i}),o=a.toJSON();a.destroy();const n=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},p=e&&e.spatialReference,c=p.wkid||JSON.stringify(p.toJSON());o.dpi*=i;const y={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();y.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return l(l(l({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:c,imageSR:c,size:t+","+r},o),n),y)}async fetchImage(e,t,r,s){const i={responseType:"image"};s&&s.timestamp&&(i.query=n(l({},i.query),{_ts:s.timestamp})),s&&s.signal&&(i.signal=s.signal),this.customParameters&&Object.keys(this.customParameters).length&&(i.query=l(l({},this.customParameters),i.query));const a=this.parsedUrl.path+"/export",o=n(l(l({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,s)),{f:"image",_ts:this.alwaysRefetch?Date.now():null});return null==o.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(i.query?i.query=l(l({},o),i.query):i.query=o,w(a,i).then((e=>e.data)).catch((e=>{if(j(e))throw e;throw new O("mapimagelayer:image-fetch-error",`Unable to load image: ${a}`,{error:e})}))):Promise.reject(new O("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o}))}async fetchRecomputedExtents(e={}){const t=n(l({},e),{query:{returnUpdates:!0,f:"json"}}),{data:r}=await w(this.url,t),{extent:s,fullExtent:i,timeExtent:a}=r,o=s||i;return{fullExtent:o&&P.fromJSON(o),timeExtent:a&&I.fromJSON({start:a[0],end:a[1]})}}loadAll(){return q(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await w(this.parsedUrl.path,{query:l(l({f:"json"},this.parsedUrl.query),this.customParameters),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};E([M()],$.prototype,"alwaysRefetch",void 0),E([M()],$.prototype,"dpi",void 0),E([M()],$.prototype,"gdbVersion",void 0),E([M()],$.prototype,"imageFormat",void 0),E([N("imageFormat",["supportedImageFormatTypes"])],$.prototype,"readImageFormat",null),E([M({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],$.prototype,"imageMaxHeight",void 0),E([M({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],$.prototype,"imageMaxWidth",void 0),E([M()],$.prototype,"imageTransparency",void 0),E([M({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$.prototype,"isReference",void 0),E([M({json:{read:!1,write:!1}})],$.prototype,"labelsVisible",void 0),E([M({type:["ArcGISMapServiceLayer"]})],$.prototype,"operationalLayerType",void 0),E([M({json:{read:!1,write:!1}})],$.prototype,"popupEnabled",void 0),E([M()],$.prototype,"sourceJSON",void 0),E([M({json:{write:{ignoreOrigin:!0}}})],$.prototype,"sublayers",void 0),E([L("sublayers",{layers:{type:[D]},visibleLayers:{type:[J]}})],$.prototype,"writeSublayers",null),E([M({type:["show","hide","hide-children"]})],$.prototype,"listMode",void 0),E([M({json:{read:!1},readOnly:!0,value:"map-image"})],$.prototype,"type",void 0),E([M(R)],$.prototype,"url",void 0),$=E([F("esri.layers.MapImageLayer")],$);var _=$;export default _;
