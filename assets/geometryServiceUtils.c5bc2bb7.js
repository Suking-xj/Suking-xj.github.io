import{ar as e,aa as r,dP as t}from"./vendor.74d5941c.js";import{a}from"./ProjectParameters.7956a902.js";async function o(a=null,o){if(e.geometryServiceUrl)return new((await import("./GeometryService.c3ce0eba.js")).default)({url:e.geometryServiceUrl});if(!a)throw new r("internal:geometry-service-url-not-configured");let i;if(i="portal"in a?a.portal||t.getDefault():a,await i.load({signal:o}),i.helperServices&&i.helperServices.geometry&&i.helperServices.geometry.url)return new((await import("./GeometryService.c3ce0eba.js")).default)({url:i.helperServices.geometry.url});throw new r("internal:geometry-service-url-not-configured")}async function i(e,t,i=null,n){const l=await o(i,n),c=new a;c.geometries=[e],c.outSpatialReference=t;const s=await l.project(c,{signal:n});if(s&&Array.isArray(s)&&1===s.length)return s[0];throw new r("internal:geometry-service-projection-failed")}export{o as create,i as projectGeometry};
