import{fc as e,cd as t,an as l}from"./vendor.74d5941c.js";class r{constructor(t){if(t instanceof e)this._tilemapCache=t;else{if(!t||!("index"in t))throw new Error("Invalid tilemap!");this._tilemap=t.index}}dataKey(e,r){if(this._tilemapCache){const{level:i,row:o,col:a}=e,s=new t(e);return this._tilemapCache.fetchAvailabilityUpsample(i,o,a,s,r).then((()=>(s.world=e.world,s))).catch((e=>{if(l(e))throw e;return null}))}return this._getIndexedDataKey(e)}forEach(e,t,l,r,i){this._callback=i,this._maxLevel=t+e,this._forEach(this._tilemap,t,l,r)}_forEach(e,t,l,r){0!==e&&(this._callback(t,l,r),t!==this._maxLevel&&"object"==typeof e&&(this._forEach(e[0],t+1,2*l,2*r),this._forEach(e[1],t+1,2*l,2*r+1),this._forEach(e[2],t+1,2*l+1,2*r),this._forEach(e[3],t+1,2*l+1,2*r+1)))}_getIndexedDataKey(e){const l=[e];if(e.level<0||e.row<0||e.col<0||e.row>>e.level>0||e.col>>e.level>0)return Promise.resolve(null);let r=e;for(;0!==r.level;)r=new t(r.level-1,r.row>>1,r.col>>1,r.world),l.push(r);let i,o,a=this._tilemap,s=l.pop();if(1===a)return Promise.resolve(s);for(;l.length;)if(i=l.pop(),o=(1&i.col)+((1&i.row)<<1),a){if(0===a[o]){s=null;break}if(1===a[o]){s=i;break}s=i,a=a[o]}return Promise.resolve(s)}}export{r};
