import{a5 as e}from"./vendor.74d5941c.js";import{u as t}from"./pixelUtils.5399eb4b.js";const i=180/Math.PI,n=function(e){return e&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0},r=new Map;function a(e,t){return r.get(e)/r.get(t)||1}function o(e){return(450-e)%360}function s(e,t="geographic"){const[n,r]=e,a=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n)*i;return s=(360+s)%360,"geographic"===t&&(s=o(s)),[a,s]}function h(e,t="geographic"){let n=e[1];"geographic"===t&&(n=o(n)),n%=360;const r=e[0];return[r*Math.cos(n/i),r*Math.sin(n/i)]}function l(e,i,r="geographic",a=1){if(!n(e))return e;const{pixels:o,width:l,height:c}=e,p=l*c,u=o[0],x=o[1],m=t.createEmptyBand(e.pixelType,p),f=t.createEmptyBand(e.pixelType,p);let d=0;for(let t=0;t<c;t++)for(let e=0;e<l;e++)"vector-uv"===i?([m[d],f[d]]=s([u[d],x[d]],r),m[d]*=a):([m[d],f[d]]=h([u[d],x[d]],r),m[d]*=a,f[d]*=a),d++;const g=new t({pixelType:e.pixelType,width:e.width,height:e.height,mask:e.mask,validPixelCount:e.validPixelCount,maskIsAlpha:e.maskIsAlpha,pixels:[m,f]});return g.updateStatistics(),g}function c(e,t,i=1){if(1===i||!n(e))return e;const r=e.clone(),{pixels:a,width:o,height:s}=r,h=a[0],l=a[1];let c=0;for(let n=0;n<s;n++)for(let e=0;e<o;e++)"vector-uv"===t?(h[c]*=i,l[c]*=i):h[c]*=i,c++;return r.updateStatistics(),r}function p(t,i,n,r,a){if(!e(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:i,height:n};const o=a.xmin,s=a.ymax;r=Math.max(r||0,30);const h=Math.ceil(i*(1/r)),l=Math.ceil(n*(1/r)),c=((t.xmax-t.xmin)/h+(t.ymax-t.ymin)/l)/2;return t.xmin=o+Math.floor((t.xmin-o)/c)*c,t.xmax=o+Math.ceil((t.xmax-o)/c)*c,t.ymin=s+Math.floor((t.ymin-s)/c)*c,t.ymax=s+Math.ceil((t.ymax-s)/c)*c,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/c)}}r.set("meter-per-second",1),r.set("kilometer-per-hour",.277778),r.set("knots",.514444),r.set("feet-per-second",.3048),r.set("mile-per-hour",.44704);export{a,c,l,p};
