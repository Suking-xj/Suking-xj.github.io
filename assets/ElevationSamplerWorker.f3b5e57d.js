import{a5 as e,ai as t}from"./vendor.74d5941c.js";import{h as r}from"./PooledRBush.257a80e4.js";import"./quickselect.e4940b29.js";import"./_commonjsHelpers.f2a458db.js";class n{async createIndex(t,n){const o=new Array;if(!t.vertexAttributes||!t.vertexAttributes.position)return new r;const a=this.createMeshData(t),s=e(n)?await n.invoke("createIndexThread",a,{transferList:o}):this.createIndexThread(a).result;return this.createPooledRBush().fromJSON(s)}createIndexThread(e){const t=new Float64Array(e.position),r=this.createPooledRBush();return e.components?this.createIndexComponentsThread(r,t,e.components.map((e=>new Uint32Array(e)))):this.createIndexAllThread(r,t)}createIndexAllThread(e,t){const r=new Array(t.length/9);let n=0;for(let a=0;a<t.length;a+=9)r[n++]=o(t,a+0,a+3,a+6);return e.load(r),{result:e.toJSON()}}createIndexComponentsThread(e,t,r){let n=0;for(const o of r)n+=o.length/3;const a=new Array(n);let s=0;for(const i of r)for(let e=0;e<i.length;e+=3)a[s++]=o(t,3*i[e+0],3*i[e+1],3*i[e+2]);return e.load(a),{result:e.toJSON()}}createMeshData(e){const t=e.vertexAttributes.position.buffer;return!e.components||e.components.some((e=>!e.faces))?{position:t}:{position:t,components:e.components.map((e=>e.faces))}}createPooledRBush(){return new r(9,t("csp-restrictions")?e=>e:[".minX",".minY",".maxX",".maxY"])}}function o(e,t,r,n){return{minX:Math.min(e[t+0],e[r+0],e[n+0]),maxX:Math.max(e[t+0],e[r+0],e[n+0]),minY:Math.min(e[t+1],e[r+1],e[n+1]),maxY:Math.max(e[t+1],e[r+1],e[n+1]),p0:[e[t+0],e[t+1],e[t+2]],p1:[e[r+0],e[r+1],e[r+2]],p2:[e[n+0],e[n+1],e[n+2]]}}export default n;export{n as ElevationSamplerWorker};
