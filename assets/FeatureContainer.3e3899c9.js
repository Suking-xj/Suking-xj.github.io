var t=Object.defineProperty,e=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,o=(e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s;import{o as n,K as l,A as d,B as h,C as u,D as c,r as p}from"./definitions.6737c10c.js";import{r as f,i as v}from"./TileContainer.763b6c09.js";import{a4 as b,a0 as x,cC as _,a5 as g,aw as m,b$ as y,aa as z,bN as w,cD as T,cS as S,ay as V,ai as D,bC as R,a9 as A,cT as E,a8 as F,cR as I,cU as O}from"./vendor.74d5941c.js";import{o as M,r as U}from"./FramebufferObject.18518335.js";import{Y as C,W as k,N as j,k as P}from"./Utils.3f1577e5.js";import{n as B,l as q}from"./visualVariablesUtils.bb9f81fa.js";class L extends f{constructor(t,e){super(t,e,[n,n])}}const N=b.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),Q=B(q,N),Z=t=>2147483647&t;class ${constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:a,textureOnly:r}=t,o=C(a);this.shared=i,this.pixelType=a,this.size=e,this.textureOnly=r,r||(this.data=new o(y(s))),this._resetRange()}destroy(){m(this._texture,(t=>t.dispose()));for(const t in this._fbos)m(this._fbos[t],(e=>{"0"===t&&e.detachColorTexture(),e.dispose()})),this._fbos[t]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(t,e,i){const s=Z(t),a=y(this.data),r=s*this.texelSize+e;!a||r>=a.length||(a[r]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(x(this.data))return null;const i=Z(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return V(this._texture,(()=>this._initTexture(t)))}getFBO(t,e=0){if(x(this._fbos[e])){const i={colorTarget:0,depthStencilTarget:0},s=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new U(t,i,s)}return this._fbos[e]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!D("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}updateTexture(t){if(!this.locked)try{const i=this.dirtyStart,s=this.dirtyEnd;if(i>s)return;this._resetRange();const a=y(this.data).buffer,r=this.getTexture(t),o=4,n=(i-i%this.size)/this.size,l=(s-s%this.size)/this.size,d=n,h=this.size,u=l,c=n*this.size*o,p=(h+u*this.size)*o-c,f=C(this.pixelType),v=f.BYTES_PER_ELEMENT;try{new f(a,c*v,p)}catch(e){}const b=new f(a,c*v,p),x=this.size,_=u-d+1;if(_>this.size)return void N.error(new z("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,d,x,_,b)}catch(e){}}update(t){const{data:e,start:i,end:s}=t;if(g(e)){const s=this.data,a=i*this.texelSize;for(let i=0;i<e.length;i++){const r=1<<i%this.texelSize;t.layout&r&&(s[a+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=C(this.pixelType);this.destroy(),this.data=new s(y(t.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new M(t,this._textureDesc,V(this.data,void 0));if(g(this._lastTexture)&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,a=this._lastTexture.descriptor.dataType,r=this._lastTexture.descriptor.pixelFormat,o=this.getFBO(t),n=k(a),l=new(C(a))(new ArrayBuffer(i*s*n*this.texelSize)),d=t.getBoundFramebufferObject(),{x:h,y:u,width:c,height:p}=t.getViewport();t.bindFramebuffer(o),o.readPixels(0,0,i,s,r,a,l),e.updateData(0,0,0,2*i,s/2,l),t.setViewport(h,u,c,p),t.bindFramebuffer(d)}return this.destroy(),this._texture=e,this._texture}}class H{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:i,size:s}=t;if(this.shared=i,this.size=s,Q("Initializing AttributeStoreView",t),x(this._data))this._data=_(e,(t=>new $(t,s,i)));else for(let a=0;a<this._data.length;a++){const t=this._data[a],r=e[a];g(r)&&(x(t)?this._data[a]=new $(r,s,i):t.resize(r,s))}this._initialized=!0}destroy(){m(this._data,(t=>_(t,(t=>t.destroy())))),m(this._defaultTexture,(t=>t.dispose()))}getBlock(t){return x(this._data)?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,l,0,0)}getData(t,e,i,s){if(!this._data)return 0;const a=y(this._data)[e];if(x(a))return 0;const r=a.getData(t,i);return g(r)?r:s}setData(t,e,i,s){const a=y(this._data)[e];y(a).setData(t,i,s)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(t){if(this._pendingAttributeUpdate)return void N.error(new z("mapview-webgl","Tried to update attribute data with a pending update"));const e=w();return Q("AttributeStoreView Update Requested",t),this._pendingAttributeUpdate={data:t,resolver:e},e.promise}update(){if(this._initialized&&(this._onUpdate(),g(this._pendingAttributeUpdate))){const{data:t,resolver:e}=this._pendingAttributeUpdate,i=y(this._data);for(let s=0;s<t.blocks.length;s++){const e=t.blocks[s],a=i[s];m(a,(t=>m(e,(e=>{Q(`Updating block ${s}`,e),t.update(e)}))))}this._pendingAttributeUpdate=null,e()}}bindTextures(t){this.update();const e=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(e,d),t.bindTexture(e,h),t.bindTexture(e,u),void t.bindTexture(e,c);const i=y(this._data);this._locked&&!this._forceNextUpload||(T(i,(e=>e.updateTexture(t))),this._forceNextUpload=!1),t.bindTexture(S(i[0],e,(e=>e.getTexture(t))),d),t.bindTexture(S(i[1],e,(e=>e.getTexture(t))),h),t.bindTexture(S(i[2],e,(e=>e.getTexture(t))),u),t.bindTexture(S(i[3],e,(e=>e.getTexture(t))),c)}_getDefaultTexture(t){if(x(this._defaultTexture)){const e={wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1};this._defaultTexture=new M(t,e,new Uint8Array(4))}return this._defaultTexture}}function Y(t,e){const i=e.length;if(t<e[0].value||1===i)return e[0].size;for(let s=1;s<i;s++)if(t<e[s].value){const i=(t-e[s-1].value)/(e[s].value-e[s-1].value);return e[s-1].size+i*(e[s].size-e[s-1].size)}return e[i-1].size}function G(t,e,i=0){if(x(e))return t[i+0]=0,t[i+1]=0,t[i+2]=0,void(t[i+3]=0);const{r:s,g:a,b:r,a:o}=e;t[i+0]=s*o/255,t[i+1]=a*o/255,t[i+2]=r*o/255,t[i+3]=o}class J{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(t){const e=this._vvSizeFieldStops;switch(e.type){case"static":return e;case"level-dependent":return V(e.levels[t],(()=>{let i=1/0,s=0;for(const n in e.levels){const e=parseFloat(n),a=Math.abs(t-e);a<i&&(i=a,s=e)}if(i===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const a=2**((t-s)/2),r=y(e.levels[s]),o=new Float32Array(r.values);return o[2]*=a,o[3]*=a,{sizes:y(r.sizes),values:o}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(t){g(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,t)}setInfo(t,e,i){switch(g(i)&&i.forEach((t=>this._updateEffects(t))),this._vvInfo=e,t.type){case"dot-density":this._updateDotDensityInfo(t)}}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:R().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(t){g(t)&&t.filter&&t.filter.enabled&&(this.outsideLabelsVisible=t.excludedLabelsVisible)}_updateVisualVariables(t,e){const i=this._vvMaterialParameters;if(i.vvOpacityEnabled=!1,i.vvSizeEnabled=!1,i.vvColorEnabled=!1,i.vvRotationEnabled=!1,!t)return;const s=t.size;if(s){if(i.vvSizeEnabled=!0,s.minMaxValue){const t=s.minMaxValue;let i,a;if(j(t.minSize)&&j(t.maxSize))if(P(t.minSize)&&P(t.maxSize))i=A(t.minSize),a=A(t.maxSize);else{const s=e.scale;i=A(Y(s,t.minSize.stops)),a=A(Y(s,t.maxSize.stops))}this.vvSizeMinMaxValue.set([t.minDataValue,t.maxDataValue,i,a])}if(s.scaleStops&&(this.vvSizeScaleStopsValue=A(Y(e.scale,s.scaleStops.stops))),s.unitValue){const t=E(e.spatialReference)/F[s.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=t/e.resolution}s.fieldStops&&(this._vvSizeFieldStops=s.fieldStops)}const a=t.color;a&&(i.vvColorEnabled=!0,this.vvColorValues.set(a.values),this.vvColors.set(a.colors));const r=t.opacity;r&&(i.vvOpacityEnabled=!0,this.vvOpacityValues.set(r.values),this.vvOpacities.set(r.opacities));const o=t.rotation;o&&(i.vvRotationEnabled=!0,i.vvRotationType=o.type)}_updateDotDensityInfo(t){const e=t.attributes;this.ddDotValue=t.dotValue,this.ddDotScale=t.referenceScale,this.ddDotSize=t.dotSize,this.ddDotBlending=t.dotBlendingEnabled,this.ddSeed=t.seed;for(let i=0;i<p;i++){const t=i>=e.length?new I([0,0,0,0]):e[i].color;G(this.ddColors,t,4*i)}for(let i=0;i<8;i++)this.ddActiveDots[i]=i<t.attributes.length?1:0;G(this.ddBackgroundColor,t.backgroundColor)}}class K extends v{constructor(t){super(t),this._rendererInfo=new J,this._materialItemsRequestQueue=new O,this.attributeView=new H((()=>this.onAttributeStoreUpdate()))}destroy(){this.removeAllChildren(),this.children.forEach((t=>t.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(t,e,i){this._rendererInfo.setInfo(t,e,i),this.requestRender()}async getMaterialItems(t,e){if(!t||0===t.length)return null;const i=w();return this._materialItemsRequestQueue.push({items:t,abortOptions:e,resolver:i}),this.requestRender(),i.promise}doRender(t){if(t.context.capabilities.enable("textureFloat"),t.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let e=this._materialItemsRequestQueue.pop();for(;e;)this._processMaterialItemRequest(t,e),e=this._materialItemsRequestQueue.pop()}super.doRender(t)}renderChildren(t){for(const e of this.children)e.commit(t);this._rendererInfo.update(t.state),super.renderChildren(t)}createRenderParams(t){return n=((t,e)=>{for(var i in e||(e={}))a.call(e,i)&&o(t,i,e[i]);if(s)for(var i of s(e))r.call(e,i)&&o(t,i,e[i]);return t})({},super.createRenderParams(t)),l={rendererInfo:this._rendererInfo,attributeView:this.attributeView},e(n,i(l));var n,l}onAttributeStoreUpdate(){}_processMaterialItemRequest(t,{items:e,abortOptions:i,resolver:s}){const{painter:a,pixelRatio:r}=t,o=e.map((t=>a.textureManager.rasterizeItem(t.symbol,r,t.glyphIds,i)));Promise.all(o).then((t=>{if(!this.stage)return void s.reject();const i=t.map(((t,i)=>({id:e[i].id,mosaicItem:t})));s.resolve(i)}),s.reject)}}export{K as o,L as r};
