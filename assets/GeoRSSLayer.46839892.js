var e=Object.defineProperty,t=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,i=(t,o,r)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[o]=r;import{gR as s,gT as l,dY as a,dZ as n,gS as p,d_ as y,e1 as d,dO as u,a5 as c,aj as h,ar as S,ae as v,af as f,dQ as m,h8 as g,hj as b,e0 as j,ag as C,hk as O,hl as R,hm as w,hn as x,ho as F}from"./vendor.74d5941c.js";const k=["atom","xml"],P={base:O,key:"type",typeMap:{"simple-line":R},errorContext:"symbol"},_={base:O,key:"type",typeMap:{"picture-marker":w,"simple-marker":x},errorContext:"symbol"},M={base:O,key:"type",typeMap:{"simple-fill":F},errorContext:"symbol"};let E=class extends(s(l(a(n(p(y(d))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,s){return"string"==typeof e?((e,s)=>{for(var l in s||(s={}))o.call(s,l)&&i(e,l,s[l]);if(t)for(var l of t(s))r.call(s,l)&&i(e,l,s[l]);return e})({url:e},s):e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?u(this.url,k)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=c(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await h(S.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};v([f()],E.prototype,"description",void 0),v([f({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],E.prototype,"title",null),v([f()],E.prototype,"featureCollections",void 0),v([m("service","featureCollections",["featureCollection.layers"])],E.prototype,"readFeatureCollections",null),v([f(g)],E.prototype,"id",void 0),v([f(b)],E.prototype,"legendEnabled",void 0),v([f({types:P,json:{write:!0}})],E.prototype,"lineSymbol",void 0),v([f({type:["show","hide"]})],E.prototype,"listMode",void 0),v([f({types:_,json:{write:!0}})],E.prototype,"pointSymbol",void 0),v([f({types:M,json:{write:!0}})],E.prototype,"polygonSymbol",void 0),v([f({type:["GeoRSS"]})],E.prototype,"operationalLayerType",void 0),v([f()],E.prototype,"outSpatialReference",void 0),v([f(j)],E.prototype,"url",void 0),v([f({readOnly:!0,json:{read:!1},value:"geo-rss"})],E.prototype,"type",void 0),E=v([C("esri.layers.GeoRSSLayer")],E);var G=E;export default G;
