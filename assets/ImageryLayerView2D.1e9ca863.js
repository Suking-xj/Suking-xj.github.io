import{ae as e,af as t,et as i,ag as s,aa as r,a5 as a,ec as o,_ as n,a4 as p,eS as l,ac as h,eT as d,eH as c,cr as u,eM as m,an as y,aO as g,d1 as w,aj as v,eh as x,aE as f,eU as b}from"./vendor.74d5941c.js";import{l as j,d as _}from"./LayerView2D.06dde519.js";import{d as R}from"./popupUtils.017b06d1.js";import{p as E}from"./vectorFieldUtils.cdd2fa8a.js";import{g as q}from"./rasterProjectionHelper.3405c919.js";import{r as V}from"./Container.d2c27c9d.js";import{e as U}from"./BaseGraphicContainer.437a7535.js";import{i as C}from"./GraphicContainer.df674785.js";import{m as D}from"./pixelUtils.5399eb4b.js";import{e as I}from"./Bitmap.0855f65e.js";import{t as S}from"./BitmapContainer.dc86fd3a.js";import{S as P}from"./ExportStrategy.a30951f7.js";import"./mat4f32.a5cabe00.js";import"./_commonjsHelpers.f2a458db.js";import"./definitions.6737c10c.js";import"./schemaUtils.ab77d03d.js";import"./MD5.1ef35834.js";import"./Utils.3f1577e5.js";import"./FramebufferObject.18518335.js";import"./MaterialKey.3bc4aaea.js";import"./visualVariablesUtils.cb58e4df.js";import"./CIMSymbolHelper.6546a069.js";import"./Rect.b51904ac.js";import"./BidiEngine.9b392b22.js";import"./WGLMeshFactory.8977e3d9.js";import"./ComputedAttributeStorage.2a55b702.js";import"./quickselect.e4940b29.js";import"./FeatureSetReader.a91e3e2d.js";import"./centroid.93c1b848.js";import"./visualVariablesUtils.bb9f81fa.js";import"./tileUtils.7f9c3912.js";import"./cimAnalyzer.0b895c7f.js";import"./TurboLine.ecd76861.js";import"./GeometryUtils.9c8423f5.js";import"./projectionSupport.62084d5a.js";import"./json.7989af9b.js";import"./VertexArrayObject.67803418.js";import"./FeatureContainer.3e3899c9.js";import"./TileContainer.763b6c09.js";import"./WGLContainer.74815466.js";import"./vec4f32.6de15d07.js";import"./ShaderCompiler.b19da10d.js";import"./earcut.0e5467f0.js";const F=p=>{let l=class extends p{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)throw new r("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:s}=i,p=R(i,t);if(!s||!a(p))throw new r("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:s,popupTemplate:p});const l=await p.getRequiredFields(),h=new o;h.geometry=e,h.outFields=l,h.outSpatialReference=e.spatialReference;const d=this.view.resolution,c="2d"===this.view.type?new n(d,d,this.view.spatialReference):new n(.5*d,.5*d,this.view.spatialReference),{returnTopmostRaster:u,showNoDataRecords:m}=p.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},y={returnDomainValues:!0,returnTopmostRaster:u,pixelSize:c,showNoDataRecords:m};return i.queryVisibleRasters(h,y).then((e=>e))}canResume(){var e;return!(!super.canResume()||null!=(e=this.timeExtent)&&e.isEmpty)}};return e([t()],l.prototype,"layer",void 0),e([t()],l.prototype,"suspended",void 0),e([t(i)],l.prototype,"timeExtent",void 0),e([t()],l.prototype,"view",void 0),l=e([s("esri.views.layers.ImageryLayerView")],l),l},B=p.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let k=class extends h{constructor(){super(...arguments),this.attached=!1,this.container=new V,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this.type="Graphics",this._graphics=new d,this._updateGraphics=c((async(e,t)=>{if(!e.stationary)return;const i=e.state,s=new u({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),r=e.state.size[0],a=e.state.size[1],o={};o.timeExtent=this.timeExtent,o.requestAsImageElement=!1,o.signal=t,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(s.spatialReference));const n="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,p=await this._projectFullExtentPromise,l=E(s,r,a,n,p),h=await this.layer.fetchImage(l.extent,l.width,l.height,o),d=this.layer.renderer;if("vector-field"===d.type){this._pixelData={extent:l.extent,pixelBlock:h.pixelData.pixelBlock};const t=await d.getGraphicsFromPixelData(h.pixelData,"vector-uv"===this.layer.rasterInfo.dataType);this._graphicsView.update(e),await m(0).then((()=>{this._graphics.set("items",t)}))}}))}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this._updateGraphics(e).catch((e=>{y(e)||B.error(e)}))}hitTest(e,t){const i=this.view.toMap(g(e,t));return Promise.resolve(new w({attributes:{},geometry:i,layer:this.layer}))}attach(){this._graphicsView=new U({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new C(this.view.featuresTilingScheme)}),this.attached=!0}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}async _getProjectedFullExtent(e){try{return await q(this.layer.fullExtent,e)}catch(t){try{const t=(await v(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?u.fromJSON(t):null}catch{return null}}}};e([t()],k.prototype,"attached",void 0),e([t()],k.prototype,"container",void 0),e([t()],k.prototype,"layer",void 0),e([t()],k.prototype,"timeExtent",void 0),e([t()],k.prototype,"view",void 0),e([t()],k.prototype,"updateRequested",void 0),e([t()],k.prototype,"updating",null),e([l({graphics:"Graphics"})],k.prototype,"type",void 0),k=e([s("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],k);var M=k;const T=p.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let G=class extends h{constructor(){super(...arguments),this.attached=!1,this.container=new V,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{y(e)||T.error(e)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e,t){const i=this.view.toMap(g(e,t));return Promise.resolve(new w({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new S,this.strategy=new P({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.container.children;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),s=D(i,t);return s?{extent:s.extent,pixelBlock:s.pixelBlock}:null}return null}_fetchImage(e,t,i,s){return(s=s||{}).timeExtent=this.timeExtent,s.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,s).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:s.signal}).then((t=>{const i=new I(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return i.filter=e=>this.layer.applyFilter(e),i}))))}};e([t()],G.prototype,"attached",void 0),e([t()],G.prototype,"container",void 0),e([t()],G.prototype,"layer",void 0),e([t()],G.prototype,"strategy",void 0),e([t()],G.prototype,"timeExtent",void 0),e([t()],G.prototype,"view",void 0),e([t()],G.prototype,"updateRequested",void 0),e([t()],G.prototype,"updating",null),e([l({imagery:"Imagery"})],G.prototype,"type",void 0),G=e([s("esri.views.2d.layers.imagery.ImageryView2D")],G);var H=G;let L=class extends(F(x(j(_)))){constructor(){super(...arguments),this._exportImageVersion=-1}initialize(){this.handles.add(f(this,["layer.blendMode"],(e=>{this.subview&&(this.subview.container.blendMode=e)}),!0))}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return!(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?Promise.resolve(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([f(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate()})),this.layer.on("redraw",(()=>this.subview.redraw())),b(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||!this.suspended&&this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var i,s;"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t||(null==(i=this.subview)||i.uninstall(this.container),null==(s=this.subview)||s.destroy(),this.subview="Imagery"===t?new H({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new M({layer:this.layer,view:this.view,timeExtent:this.timeExtent}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode),this.requestUpdate()}};e([t()],L.prototype,"pixelData",null),e([t({readOnly:!0})],L.prototype,"updating",null),e([t()],L.prototype,"subview",void 0),L=e([s("esri.views.2d.layers.ImageryLayerView2D")],L);var N=L;export default N;
