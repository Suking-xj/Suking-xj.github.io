import{ae as e,af as i,ag as r,aa as a,ev as s}from"./vendor.74d5941c.js";import t from"./FeatureLayerView2D.1ef9f875.js";import"./definitions.6737c10c.js";import"./LayerView2D.06dde519.js";import"./Container.d2c27c9d.js";import"./mat4f32.a5cabe00.js";import"./_commonjsHelpers.f2a458db.js";import"./clickToleranceUtils.1b8c692d.js";import"./drapedUtils.72df2b08.js";import"./schemaUtils.ab77d03d.js";import"./MD5.1ef35834.js";import"./Utils.3f1577e5.js";import"./FramebufferObject.18518335.js";import"./MaterialKey.3bc4aaea.js";import"./visualVariablesUtils.cb58e4df.js";import"./CIMSymbolHelper.6546a069.js";import"./Rect.b51904ac.js";import"./BidiEngine.9b392b22.js";import"./popupUtils.017b06d1.js";const l=t=>{let l=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return s(this.layer.fields,["*"])}};return e([i()],l.prototype,"layer",void 0),e([i({readOnly:!0})],l.prototype,"availableFields",null),l=e([r("esri.views.layers.OGCFeatureLayerView")],l),l};let o=class extends(l(t)){};o=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],o);var p=o;export default p;
